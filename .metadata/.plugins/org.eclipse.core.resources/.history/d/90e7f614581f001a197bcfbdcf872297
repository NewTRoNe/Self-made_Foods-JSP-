package user;

import java.io.BufferedReader;
import java.io.FileReader;
import java.security.MessageDigest;
import java.security.spec.X509EncodedKeySpec;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

import org.apache.commons.codec.binary.Base64;

public class Test {

	public static void main(String[] args) {
		String saltstr = "salt"; // salt
		byte[] salt = saltstr.getBytes(); // byte화
		byte[] a = "123456";
		byte[] bytes = new byte[a.length + salt.length]; // salt와 password를 합침

		System.arraycopy(a, 0, bytes, 0, a.length);
		System.arraycopy(salt, 0, bytes, a.length, salt.length);
		
		try {
			MessageDigest md = MessageDigest.getInstance("SHA-256"); //sha-256을 해시함수로 사용
			md.update(bytes);

			byte[] byteData = md.digest();

			StringBuffer sb = new StringBuffer();	//해시값을 저장할 변수
			for (int i = 0; i < byteData.length; i++) {
				sb.append(Integer.toString((byteData[i] & 0xFF) + 256, 16).substring(1));
			}
			String hashpassword = sb.toString(); //hashpassword에 String으로 저장
			BufferedReader brKey = new BufferedReader(
					new FileReader("C:/Workspace/Project/smarteditorSample/WebContent/DESKey.txt"));
			String sKey = brKey.readLine();
			// 암호키 인코딩
			byte[] bKey = Base64.decodeBase64(sKey.getBytes()); //사용 가능한 형태로 변환
			X509EncodedKeySpec SecretKey = new X509EncodedKeySpec(bKey);
			SecretKeySpec keySpec = new SecretKeySpec(SecretKey.getEncoded(), "DES");
			Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding"); //DES를 이용하여 암,복호화 준비
			cipher.init(Cipher.ENCRYPT_MODE, keySpec);	//암호화 준비
			byte[] ciphertext = cipher.doFinal(Base64.decodeBase64(hashpassword));	//암호화를 실행하여 암호문 저장
			String cipherpw = new String(ciphertext); //cipherpw에 암호화한 pw를 저장.
	}

}
