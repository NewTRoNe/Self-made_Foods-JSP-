/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.29
 * Generated at: 2019-12-15 15:18:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<!-- 뷰포트 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" initial-scale=\"1\">\r\n");
      out.write("<!-- 스타일시트 참조  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<title>jsp 게시판 웹사이트</title>\r\n");
      out.write("<style>\r\n");
      out.write("#second\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 네비게이션  -->\r\n");
      out.write("\t\r\n");
      out.write("\t<nav class=\"navbar navbar-default \">\r\n");
      out.write("\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\r\n");
      out.write("\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\r\n");
      out.write("\t\t\t\taria-expaned=\"false\">\r\n");
      out.write("\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"Main.jsp\">자취세끼</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

if( (String)session.getAttribute("userEmail") == null) 
 {
      out.write("\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\"\r\n");
      out.write("\t\t\tid=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t<li><a href=\"Login.jsp\">로그인</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"Join.jsp\">회원가입</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t<li>로그인 해주세요</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 }else { 
      out.write("\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\"\r\n");
      out.write("\t\t\tid=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t<li><a href=\"BBS.jsp\">레시피</a></li>\r\n");
      out.write("\t\t\t\t<li><a>게시판</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"LogoutAction.jsp\">로그아웃</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t<li>");
      out.print((String)session.getAttribute("userEmail") );
      out.write("</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 }
      out.write("\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<div id=\"map\"\r\n");
      out.write("\t\tstyle=\"margin:0 auto; width: 700px; height: 350px; border: 1px solid grey;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\"\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=fd287aad82b0a4095bd066abfc81b3ff\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("    mapOption = { \r\n");
      out.write("        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("        level: 3 // 지도의 확대 레벨\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\r\n");
      out.write("// 마커가 표시될 위치입니다 \r\n");
      out.write("var markerPosition  = new kakao.maps.LatLng(33.450701, 126.570667); \r\n");
      out.write("\r\n");
      out.write("// 마커를 생성합니다\r\n");
      out.write("var marker = new kakao.maps.Marker({\r\n");
      out.write("    position: markerPosition\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("marker.setMap(map);\r\n");
      out.write("\r\n");
      out.write("var iwContent = '<div style=\"padding:5px;\">Hello World! <br><a href=\"https://map.kakao.com/link/map/Hello World!,33.450701,126.570667\" style=\"color:blue\" target=\"_blank\">큰지도보기</a> <a href=\"https://map.kakao.com/link/to/Hello World!,33.450701,126.570667\" style=\"color:blue\" target=\"_blank\">길찾기</a></div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n");
      out.write("    iwPosition = new kakao.maps.LatLng(33.450701, 126.570667); //인포윈도우 표시 위치입니다\r\n");
      out.write("\r\n");
      out.write("// 인포윈도우를 생성합니다\r\n");
      out.write("var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("    position : iwPosition, \r\n");
      out.write("    content : iwContent \r\n");
      out.write("});\r\n");
      out.write("  \r\n");
      out.write("// 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다\r\n");
      out.write("infowindow.open(map, marker); \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div style=\"margin:0 auto; width: 700px; border-bottom: 1px solid grey;\">\r\n");
      out.write("<h5><strong>주소</strong> : 주안역</h5>\r\n");
      out.write("<h5><strong>대표전화 </strong>: 010-2231-7425</h5>\r\n");
      out.write("<h5><strong>대표팩스</strong> : 032-870-2114</h5>\r\n");
      out.write("</div>\r\n");
      out.write("<div style=\"margin:0 auto; width: 700px; border-bottom: 1px solid grey;\">\r\n");
      out.write("<ul style=\"display:inline-block;\">\r\n");
      out.write("\r\n");
      out.write("<li style=\"display:inline-block;float:left;\"><img src=\"image\\bus.PNG\" width=\"100\" height=\"100\"></li>\r\n");
      out.write("\r\n");
      out.write("<li style=\"list-style: none;\">인하대 후문 하차</li>\r\n");
      out.write("<li style=\"list-style: none;\"><img src=\"image\\minibus.PNG\"> 511</li>\r\n");
      out.write("\r\n");
      out.write("<li style=\"list-style: none;\">인하대 후문 하차</li>\r\n");
      out.write(" <li style=\"list-style: none;\"><img src=\"image\\minibus.PNG\"> 511</li>\r\n");
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div style=\"margin:0 auto; width: 700px; border-bottom: 1px solid grey;\">\r\n");
      out.write("<ul style=\"display:inline-block;\">\r\n");
      out.write("\r\n");
      out.write("<li style=\"display:inline-block;float:left;\"><img src=\"image\\subway.PNG\" width=\"100\" height=\"100\"></li>\r\n");
      out.write("\r\n");
      out.write("<li style=\"list-style: none;\">인하대 후문 하차</li>\r\n");
      out.write("<li style=\"list-style: none;\"><img src=\"image\\minibus.PNG\"> 511</li>\r\n");
      out.write("\r\n");
      out.write("<li style=\"list-style: none;\">인하대 후문 하차</li>\r\n");
      out.write(" <li style=\"list-style: none;\"><img src=\"image\\minibus.PNG\"> 511</li>\r\n");
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 애니매이션 담당 JQUERY -->\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<!-- 부트스트랩 JS  -->\r\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
